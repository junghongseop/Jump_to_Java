-정수-
자료형	표형범위
int	-2147483648 ~ 2147483647
long	-9223372036854775808 ~ 9223372036854775807

ex)
int age = 10;
long countOfStar = 8764827384923849L;

long변수에 값을 대입할 때는 대입하는 숫자 값이 int자료형의 최대값인 2144748367보다 큰 경우8764827384923849L과 같이 L접미사를 붙여 주어야 함
만약 큰 숫자에 L접미사를 누락하면 컴파일 에러가 발생

-실수-
자료형	표현범위
float	-3.4*10^38 ~ 3.4*10^38
double	-1.7*10^308 ~ 1.7*10^308

ex)
float pi = 3.14F;	
double morePi = 3.14159265358979323846;	

자바에서 실수형은 디폴트가 double이므로 float변수에 값을 대입할 때애는 3.14F와 같은 F접미사를 붙여주어야 함

-8진수와 16진수-
0으로 시작하면 8진수, 0x로 시작하면 16진수가 됨

ex)
int octal =023;	
int hex = 0xC;

-숫자연산-
자바의 사칙연산은 실생활에서 일반적으로 사용하는 사칙연산과 다를바가 없음
자바는 +,-,*,/ 기호를 이용하여 두 숫자간 사칙연산을 수행

-증감연산-
ex)
int i = 0;
int j = 10;
i++;
j--;

System.out.println(i);	//0 출력
System.out.println(j);	//1출력


++는 값을 1만큼 증가시키고 --는 값을 1만큼 감소시킨다는 것을 확인 할 수 있음

ex)
int i = 0;
System.out.println(i++);	//0 출력
System.out.println(i);		//1 출력

++연산자가 변수명 뒤에 붙으면 해당 코드가 실행되는 순간에는 i값이 변경되지 않음
다만 i++문장이 실행된 이후에 i값이 증가함
반대로 i++대신 ++i라고 사용하게 되면 i 값이 먼저 증가된 후에 해당 코드가 실행

-i++: 값이 참조된 후에 증가
-++i: 값이 참조되기 전에 증가
		
